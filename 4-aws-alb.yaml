AWSTemplateFormatVersion: "2010-09-09"
Description: Application Load with Path-based Routing
Parameters:
  EnvironmentName:
    Type: String
    Default: alb
Resources:
  ECSSecurityGroupWeb2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP on port 80
      GroupName: "ECS-DEMO-Web-SG-2"
      VpcId:
        Fn::ImportValue: aws-alb-for-ecs-launch-types:VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
      Tags:
        - Key: "Name"
          Value: "ALB-DEMO-Web-SG-2"

  ECSSecurityGroupInt:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Only allow access from application load balancer
      GroupName: "ECS-DEMO-Int-SG"
      VpcId:
        Fn::ImportValue: aws-alb-for-ecs-launch-types:VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          SourceSecurityGroupId: !Ref "ECSSecurityGroupWeb2"

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "30"
      Subnets:
        - Fn::ImportValue: aws-alb-for-ecs-launch-types:ECSDemoPublicSubnetOne
        - Fn::ImportValue: aws-alb-for-ecs-launch-types:ECSDemoPublicSubnetTwo
      SecurityGroups: [!Ref "ECSSecurityGroupWeb2"]

  TargetGroupForECSEC2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue: aws-alb-for-ecs-launch-types:VpcId

  TargetGroupForECSFargate:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 4
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue: aws-alb-for-ecs-launch-types:VpcId

  ListenerRule1:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "TargetGroupForECSEC2"
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /ec2/*
      ListenerArn: !Ref ApplicationLoadBalancerListener
      Priority: 1

  ListenerRule2:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "TargetGroupForECSFargate"
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /fargate/*
      ListenerArn: !Ref ApplicationLoadBalancerListener
      Priority: 2

  ApplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - ApplicationLoadBalancer
    Properties:
      DefaultActions:
        - Type: "redirect"
          RedirectConfig:
            Protocol: "#{protocol}"
            Port: "#{port}"
            Host: "#{host}"
            Path: "/ec2/"
            StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref "ApplicationLoadBalancer"
      Port: 80
      Protocol: HTTP

Outputs:
  PublicUrlofALB:
    Description: Publicly Accessible URL of the Application Load Balancer
    Value: !Sub http://${ApplicationLoadBalancer.DNSName}
    Export:
      Name: aws-alb-for-ecs-launch-types:ExternalUrl
